
// NewMonitorView.h : CNewMonitorView 类的接口
//

#pragma once
#include "../chartdirector/include/ChartViewer.h"
#include <tuple>
#include <ctime>

class CNewMonitorView : public CView
{
protected: // 仅从序列化创建
	CNewMonitorView();
	DECLARE_DYNCREATE(CNewMonitorView)

// 特性
public:
	CNewMonitorDoc* GetDocument() const;

// 操作
public:

// 重写
public:
	virtual void OnDraw(CDC* pDC);  // 重写以绘制该视图
	virtual BOOL PreCreateWindow(CREATESTRUCT& cs);
protected:
	void DrawChart();

	std::vector<std::tuple<double, double, double>> ParseData(const std::vector<char>& data, short type1, short type2); // type: 0->压力  1->位移 2->流量
// 实现
public:
	virtual ~CNewMonitorView();
#ifdef _DEBUG
	virtual void AssertValid() const;
	virtual void Dump(CDumpContext& dc) const;
#endif

protected:
	CChartViewer m_chart;
// 生成的消息映射函数
protected:
	afx_msg void OnFilePrintPreview();
	afx_msg void OnRButtonUp(UINT nFlags, CPoint point);
	afx_msg void OnContextMenu(CWnd* pWnd, CPoint point);
	afx_msg void OnImageArray();
	afx_msg void OnImageLarge();
	afx_msg void OnImageSmall();
	afx_msg void OnViewPortChanged();
	DECLARE_MESSAGE_MAP()
public:
	afx_msg int OnCreate(LPCREATESTRUCT lpCreateStruct);
	afx_msg void OnSize(UINT nType, int cx, int cy);
	afx_msg void OnFreshMap();
};

#ifndef _DEBUG  // NewMonitorView.cpp 中的调试版本
inline CNewMonitorDoc* CNewMonitorView::GetDocument() const
   { return reinterpret_cast<CNewMonitorDoc*>(m_pDocument); }
#endif

